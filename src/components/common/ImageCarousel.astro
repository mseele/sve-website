---
import { SITE } from '@/config.mjs'
import { Picture } from 'astro:assets'
import { Icon } from 'astro-icon/components'
import type { ThemedImage } from '@/types'
import { ulid } from 'ulid'

interface Props {
  images: ThemedImage[]
  indexId?: string
  dialogId?: string
}

const { images, indexId, dialogId } = Astro.props
const id = ulid()
---

<div class="relative size-full overflow-hidden overscroll-contain rounded-2xl text-center">
  <div class="flex snap-x snap-mandatory space-x-10 overflow-x-auto scroll-smooth scrollbar-none">
    {
      images.map((image, index) => (
        <div
          id={`slide-${id}-${index}`}
          class="relative flex h-full w-full shrink-0 origin-center scale-100 snap-start items-center justify-center rounded-xl"
        >
          <Picture
            src={image.light}
            loading="lazy"
            alt={image.alt}
            widths={SITE.imageWidths}
            formats={SITE.imageFormats}
            class:list={[
              'rounded-2xl object-cover dark:block dark:hidden',
              dialogId === undefined && 'h-auto max-h-[95dvh] w-auto max-w-[95dvw]'
            ]}
            onclick={
              dialogId !== undefined
                ? `document.dispatchEvent(new CustomEvent('open-image-dialog', { detail: { id: '${dialogId}', index: ${index} } }))`
                : undefined
            }
          />
          <Picture
            src={image.light}
            loading="lazy"
            alt={image.alt}
            widths={SITE.imageWidths}
            formats={SITE.imageFormats}
            class:list={[
              'hidden rounded-2xl object-cover dark:block',
              dialogId === undefined && 'h-auto max-h-[95dvh] w-auto max-w-[95dvw]'
            ]}
            onclick={
              dialogId !== undefined
                ? `document.dispatchEvent(new CustomEvent('open-image-dialog', { detail: { id: '${dialogId}', index: ${index} } }))`
                : undefined
            }
          />
          <div class="pointer-events-none absolute inset-0 bottom-1/4 top-1/4">
            <div class="max-w-40 pointer-events-auto absolute inset-y-0 right-0 flex w-1/3 items-center justify-end pr-2 opacity-0 transition-opacity duration-200 hover:opacity-100">
              <button
                onclick={`document.querySelector('#slide-${id}-${index === images.length - 1 ? 0 : index + 1}')?.scrollIntoView({ behavior: 'smooth', block: 'nearest' })`}
              >
                <Icon
                  class="size-8 text-black opacity-80 dark:text-white"
                  name="mdi:chevron-right-circle"
                />
              </button>
            </div>
            <div class="max-w-40 justify-left pointer-events-auto absolute inset-y-0 left-0 flex w-1/3 items-center pl-2 opacity-0 transition-opacity duration-200 hover:opacity-100">
              <button
                onclick={`document.querySelector('#slide-${id}-${index === 0 ? images.length - 1 : index - 1}')?.scrollIntoView({ behavior: 'smooth', block: 'nearest' })`}
              >
                <Icon
                  class="size-8 text-black opacity-80 dark:text-white"
                  name="mdi:chevron-left-circle"
                />
              </button>
            </div>
          </div>
          <div class="absolute inset-x-0 bottom-2">
            {images.map((_image, dotIndex) => (
              <button
                class:list={[
                  'mr-1 inline-flex size-3 items-center justify-center rounded-full opacity-80 hover:bg-gray-100',
                  index === dotIndex ? 'bg-white' : 'bg-gray-300'
                ]}
                onclick={`document.querySelector('${`#slide-${id}-${dotIndex}`}')?.scrollIntoView({ behavior: 'smooth', block: 'nearest' })`}
              />
            ))}
          </div>
        </div>
      ))
    }
  </div>
</div>

<script define:vars={{ id, indexId }}>
  if (indexId !== undefined) {
    document.addEventListener('show-image-index', (event) => {
      const { id: eventId, index } = event.detail
      if (eventId === indexId) {
        document.querySelector(`#slide-${id}-${index}`)?.scrollIntoView({ behavior: 'instant' })
      }
    })
  }
  // document.querySelectorAll(`#slide-dot-${id}`).forEach((element, index) => {
  //   element.addEventListener('click', () => {
  //     const slide = document.querySelector(`#slide-${id}-${index}`)
  //     slide?.scrollIntoView({ behavior: 'smooth', block: 'nearest' })
  //   })
  // })
</script>
